{"version":3,"sources":["components/WeatherCard/location.js","components/WeatherCard/info.js","components/WeatherCard/component.js","components/WeatherEngine.js","components/instructions.js","App.js","reportWebVitals.js","index.js"],"names":["Location","city","country","getWeather","useState","query","setQuery","inputMode","setInputMode","inputRef","useRef","useEffect","current","focus","Container","div","initial","opacity","animate","FormElement","onSubmit","e","preventDefault","InputField","ref","required","value","onChange","target","SearchButton","type","CancelButton","onClick","City","Country","CityHover","styled","form","input","button","Info","celsius","condition","useCelsius","setUseCelsius","units","console","log","Temperature","Math","round","Units","Condition","fahrenheit","span","WeatherCard","getGradient","highColor","lowColor","topGreen","botGreen","Card","scale","WeatherEngine","default_location","API_KEY","process","loading","setLoading","error","setError","weather","setWeather","a","fetch","response","json","responseJSON","name","sys","main","temp","Error","Loader","color","Instructions","InstructionPanel","App","Main","CardContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee749fcb.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"@emotion/styled/\";\nimport { motion } from \"framer-motion\";\n\nconst Location = ({ city, country, getWeather }) => {\n  const [query, setQuery] = useState(\"\");\n  // inputMode is true when user is typing input\n  const [inputMode, setInputMode] = useState(false);\n  const inputRef = useRef(\"\");\n\n  // Give focus to input field\n  useEffect(() => {\n    if (inputMode) {\n      inputRef.current.focus();\n    }\n  });\n\n  if (inputMode) {\n    return (\n      <Container>\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>\n          <FormElement\n            onSubmit={(e) => {\n              e.preventDefault();\n              getWeather(query);\n            }}\n          >\n            <InputField\n              ref={inputRef}\n              required\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n            <SearchButton type=\"submit\">Search</SearchButton>\n            <CancelButton onClick={() => setInputMode(false)}>\n              Cancel\n            </CancelButton>\n          </FormElement>\n        </motion.div>\n        <City onClick={() => setInputMode(true)}>{city}</City>\n        <Country>{country}</Country>\n      </Container>\n    );\n  }\n\n  if (!inputMode) {\n    return (\n      <Container>\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }}>\n          <CityHover onClick={() => setInputMode(true)}>{city}</CityHover>\n          <Country>{country}</Country>\n        </motion.div>\n      </Container>\n    );\n  }\n};\n\nexport default Location;\n\n// Styled sub-components are outside of the main component to avoid\n// too much re-rendering\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst FormElement = styled.form`\n  margin: 20px 8px 8px 8px;\n  display: flex;\n  position: relative;\n  background: white;\n  border-radius: 5px;\n`;\n\nconst InputField = styled.input`\n  background: transparent;\n  border: none;\n  padding: 5px;\n  width: 120px;\n  :focus {\n    outline: 0;\n  }\n`;\n\nconst SearchButton = styled.button`\n  padding: 5px;\n  background: lightgray;\n  cursor: pointer;\n  border: none;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n`;\n\nconst CancelButton = styled.button`\n  position: absolute;\n  background: white;\n  opacity: 80%;\n  border: none;\n  cursor: pointer;\n  top: -22px;\n  height: 18px;\n  border-radius: 5px;\n`;\n\nconst CityHover = styled.div`\n  margin: 0 0;\n  font-family: \"Merriweather\", sans-serif;\n  font-size: 1.6rem;\n  position: relative;\n  cursor: pointer;\n  :hover {\n    top: -4px;\n  }\n`;\n\nconst City = styled.div`\n  margin: 0 0;\n  font-family: \"Merriweather\", sans-serif;\n  font-size: 1.6rem;\n  position: relative;\n`;\n\nconst Country = styled.div`\n  margin-top: 5px;\n  font-family: \"Fira Sans\", sans-serif;\n  font-size: 1.1rem;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled/\";\n\nconst Info = ({ celsius, condition }) => {\n  const [useCelsius, setUseCelsius] = useState(true);\n  let units = \"°C\";\n  console.log(condition);\n  if (useCelsius) {\n    return (\n      <>\n        <Temperature>\n          {Math.round(celsius)}\n          <Units\n            onClick={(e) => {\n              e.preventDefault();\n              setUseCelsius(!useCelsius);\n            }}\n          >\n            {units}\n          </Units>\n        </Temperature>\n\n        <Condition>{condition}</Condition>\n      </>\n    );\n  } else if (!useCelsius) {\n    let fahrenheit = (celsius * 9) / 5 + 32;\n    units = \"°F\";\n\n    return (\n      <>\n        <Temperature>\n          {Math.round(fahrenheit)}\n          <Units\n            onClick={(e) => {\n              e.preventDefault();\n              setUseCelsius(!useCelsius);\n            }}\n          >\n            {units}\n          </Units>\n        </Temperature>\n\n        <Condition>{condition}</Condition>\n      </>\n    );\n  }\n};\n\nexport default Info;\n\nconst Temperature = styled.div`\n  font-family: \"Fira Sans\", sans-serif;\n  font-size: 2.5rem;\n  font-weight: 200;\n  position: relative;\n`;\n\nconst Units = styled.span`\n  cursor: pointer;\n`;\n\nconst Condition = styled.div`\n  font-family: \"Merriweather\", sans-serif;\n  font-size: 1.5rem;\n  position: relative;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled/\";\nimport { motion } from \"framer-motion\";\n\nimport Location from \"./location\";\nimport Info from \"./info\";\n\nconst WeatherCard = ({ celsius, condition, city, country, getWeather }) => {\n  const getGradient = (celsius) => {\n    let highColor = null;\n    let lowColor = null;\n\n    if (celsius > 15) {\n      // \"Hot\" weather\n      let topGreen = (1 - (celsius - 15) / 25) * 255;\n      let botGreen = topGreen / 2;\n\n      highColor = `rgb(255, ${topGreen}, 0)`;\n      lowColor = `rgb(255, ${botGreen}, 0)`;\n    } else if (celsius <= 14) {\n      // \"Cold\" weather\n      let topGreen = (1 - (celsius + 20) / 35) * 255;\n      let botGreen = topGreen / 2;\n\n      highColor = `rgb(0, ${topGreen}, 255)`;\n      lowColor = `rgb(0, ${botGreen}, 255)`;\n    }\n    return [highColor, lowColor];\n  };\n\n  const Card = styled.div`\n    margin: 15px 15px;\n    background: linear-gradient(\n      20deg,\n      ${getGradient(celsius)[0]},\n      ${getGradient(celsius)[1]}\n    );\n    width: 200px;\n    height: 240px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 15px;\n  `;\n\n  return (\n    <motion.div initial={{ scale: 0 }} animate={{ scale: 1 }}>\n      <Card>\n        <Location city={city} country={country} getWeather={getWeather} />\n        <Info celsius={celsius} condition={condition} />\n      </Card>\n    </motion.div>\n  );\n};\n\nexport default WeatherCard;\n","import React, { useState, useEffect } from \"react\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport styled from \"@emotion/styled/\";\n\nimport WeatherCard from \"./WeatherCard/component\";\n\nconst WeatherEngine = ({ default_location }) => {\n  // TODO: Hide API keys\n  //const api_key = \"bf746c8139c227d3504c054d39a6bdba\";\n  const API_KEY = process.env.REACT_APP_OPEN_WEATHER_API_KEY;\n  console.log(API_KEY);\n\n  // useState (imported from React) is a Hook for using React state\n  // We pass the initial state as argument.\n  // useState returns an array with two values:\n  // a variable and a function to update that variable\n\n  // query can be in form 'city' or 'city, country code'\n  const [query, setQuery] = useState(\"\");\n\n  const [loading, setLoading] = useState(false); // No loading initially\n  const [error, setError] = useState(false); // No errors initially\n\n  // Passing useState an object to represent weather\n  const [weather, setWeather] = useState({\n    city: null,\n    country: null,\n    celsius: null,\n    condition: null,\n  });\n\n  // Async function that fetches weather info from OpenWeather API\n  // Updates weather object via setWeather()\n  const getWeather = async (query) => {\n    setQuery(\"\"); // Reset to empty string each time\n    setLoading(true); // Begin loading\n    try {\n      // Async functions need to await for Promise to be settled\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&APPID=${API_KEY}`\n      );\n      const responseJSON = await response.json(); // String of JSON data\n      setWeather({\n        city: responseJSON.name,\n        country: responseJSON.sys.country,\n        celsius: responseJSON.main.temp,\n        condition: responseJSON.weather[0].main,\n      });\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false); // End loading\n  };\n\n  // useEffect Hook from React takes in function and dependency array\n  // Function argument will run once the component is mounted\n  // It will re-run if/when any of its dependencies change\n  // This particular bit of code initializes the weather card so its not blank\n  useEffect(() => {\n    getWeather(default_location);\n  }, [default_location]);\n\n  if (error) {\n    return (\n      <Error>\n        Error: Couldn't find that city!\n        <button onClick={() => setError(false)}>Reset</button>\n      </Error>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Loader>\n        <PulseLoader color=\"lightgray\" />\n      </Loader>\n    );\n  }\n\n  return (\n    <WeatherCard\n      celsius={weather.celsius}\n      condition={weather.condition}\n      city={weather.city}\n      country={weather.country}\n      getWeather={getWeather}\n    />\n  );\n};\n\nexport default WeatherEngine;\n\nconst Error = styled.div`\n  margin: 15px 15px;\n  background: #525252;\n  width: 200px;\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-around;\n  align-items: center;\n  border-radius: 15px;\n`;\n\nconst Loader = styled.div`\n  margin: 15px 15px;\n  display: flex;\n  width: 200px;\n  height: 240px;\n  justify-content: space-around;\n  align-items: center;\n  border-radius: 15px;\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled/\";\n\nconst Instructions = () => {\n  return (\n    <InstructionPanel>\n      Click a city name to search for a new city <br />\n      Click the temperature units to switch between celsius and fahrenheit\n    </InstructionPanel>\n  );\n};\n\nexport default Instructions;\n\nconst InstructionPanel = styled.div`\n  color: white;\n  font-family: sans-serif;\n  font-size: 1.6rem;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled/\";\n\nimport WeatherEngine from \"./components/WeatherEngine\";\nimport Instructions from \"./components/instructions\";\n\nfunction App() {\n  return (\n    <Main>\n      <Instructions />\n      <br />\n      <CardContainer>\n        <WeatherEngine default_location=\"hong kong, hk\" />\n        <WeatherEngine default_location=\"singapore, sg\" />\n        <WeatherEngine default_location=\"new york, us\" />\n        <WeatherEngine default_location=\"medford, us\" />\n\n        <WeatherEngine default_location=\"geneva, ch\" />\n      </CardContainer>\n      <CardContainer>\n        <WeatherEngine default_location=\"sydney, au\" />\n        <WeatherEngine default_location=\"chicago, us\" />\n        <WeatherEngine default_location=\"london\" />\n        <WeatherEngine default_location=\"taiwan\" />\n        <WeatherEngine default_location=\"shanghai\" />\n      </CardContainer>\n    </Main>\n  );\n}\n\nexport default App;\n\nconst Main = styled.div`\n  color: white;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}