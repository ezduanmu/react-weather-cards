[{"/Users/ezduanmu/Desktop/react-weather-cards/src/index.js":"1","/Users/ezduanmu/Desktop/react-weather-cards/src/App.js":"2","/Users/ezduanmu/Desktop/react-weather-cards/src/reportWebVitals.js":"3","/Users/ezduanmu/Desktop/react-weather-cards/src/components/WeatherEngine.js":"4","/Users/ezduanmu/Desktop/react-weather-cards/src/components/instructions.js":"5","/Users/ezduanmu/Desktop/react-weather-cards/src/components/WeatherCard/component.js":"6","/Users/ezduanmu/Desktop/react-weather-cards/src/components/WeatherCard/location.js":"7","/Users/ezduanmu/Desktop/react-weather-cards/src/components/WeatherCard/info.js":"8"},{"size":500,"mtime":1609065521853,"results":"9","hashOfConfig":"10"},{"size":1188,"mtime":1609232839177,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609232796421,"results":"12","hashOfConfig":"10"},{"size":3156,"mtime":1609239261581,"results":"13","hashOfConfig":"10"},{"size":450,"mtime":1609242472860,"results":"14","hashOfConfig":"10"},{"size":1494,"mtime":1609245962946,"results":"15","hashOfConfig":"10"},{"size":2835,"mtime":1609245843630,"results":"16","hashOfConfig":"10"},{"size":1398,"mtime":1609245852467,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1uw2ud9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/ezduanmu/Desktop/react-weather-cards/src/index.js",[],["38","39"],"/Users/ezduanmu/Desktop/react-weather-cards/src/App.js",[],"/Users/ezduanmu/Desktop/react-weather-cards/src/reportWebVitals.js",[],"/Users/ezduanmu/Desktop/react-weather-cards/src/components/WeatherEngine.js",["40","41"],"import React, { useState, useEffect } from \"react\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport styled from \"@emotion/styled/\";\n\nimport WeatherCard from \"./WeatherCard/component\";\n\nconst WeatherEngine = ({ default_location }) => {\n  // TODO: Hide API keys\n  //const api_key = \"bf746c8139c227d3504c054d39a6bdba\";\n  const API_KEY = process.env.REACT_APP_OPEN_WEATHER_API_KEY;\n  console.log(API_KEY);\n\n  // useState (imported from React) is a Hook for using React state\n  // We pass the initial state as argument.\n  // useState returns an array with two values:\n  // a variable and a function to update that variable\n\n  // query can be in form 'city' or 'city, country code'\n  const [query, setQuery] = useState(\"\");\n\n  const [loading, setLoading] = useState(false); // No loading initially\n  const [error, setError] = useState(false); // No errors initially\n\n  // Passing useState an object to represent weather\n  const [weather, setWeather] = useState({\n    city: null,\n    country: null,\n    celsius: null,\n    condition: null,\n  });\n\n  // Async function that fetches weather info from OpenWeather API\n  // Updates weather object via setWeather()\n  const getWeather = async (query) => {\n    setQuery(\"\"); // Reset to empty string each time\n    setLoading(true); // Begin loading\n    try {\n      // Async functions need to await for Promise to be settled\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&APPID=${API_KEY}`\n      );\n      const responseJSON = await response.json(); // String of JSON data\n      setWeather({\n        city: responseJSON.name,\n        country: responseJSON.sys.country,\n        celsius: responseJSON.main.temp,\n        condition: responseJSON.weather[0].main,\n      });\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false); // End loading\n  };\n\n  // useEffect Hook from React takes in function and dependency array\n  // Function argument will run once the component is mounted\n  // It will re-run if/when any of its dependencies change\n  // This particular bit of code initializes the weather card so its not blank\n  useEffect(() => {\n    getWeather(default_location);\n  }, [default_location]);\n\n  if (error) {\n    return (\n      <Error>\n        Error: Couldn't find that city!\n        <button onClick={() => setError(false)}>Reset</button>\n      </Error>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Loader>\n        <PulseLoader color=\"lightgray\" />\n      </Loader>\n    );\n  }\n\n  return (\n    <WeatherCard\n      celsius={weather.celsius}\n      condition={weather.condition}\n      city={weather.city}\n      country={weather.country}\n      getWeather={getWeather}\n    />\n  );\n};\n\nexport default WeatherEngine;\n\nconst Error = styled.div`\n  margin: 15px 15px;\n  background: #525252;\n  width: 200px;\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-around;\n  align-items: center;\n  border-radius: 15px;\n`;\n\nconst Loader = styled.div`\n  margin: 15px 15px;\n  display: flex;\n  width: 200px;\n  height: 240px;\n  justify-content: space-around;\n  align-items: center;\n  border-radius: 15px;\n`;\n","/Users/ezduanmu/Desktop/react-weather-cards/src/components/instructions.js",[],"/Users/ezduanmu/Desktop/react-weather-cards/src/components/WeatherCard/component.js",["42"],"import React, { useState } from \"react\";\nimport styled from \"@emotion/styled/\";\nimport { motion } from \"framer-motion\";\n\nimport Location from \"./location\";\nimport Info from \"./info\";\n\nconst WeatherCard = ({ celsius, condition, city, country, getWeather }) => {\n  const getGradient = (celsius) => {\n    let highColor = null;\n    let lowColor = null;\n\n    if (celsius > 15) {\n      // \"Hot\" weather\n      let topGreen = (1 - (celsius - 15) / 25) * 255;\n      let botGreen = topGreen / 2;\n\n      highColor = `rgb(255, ${topGreen}, 0)`;\n      lowColor = `rgb(255, ${botGreen}, 0)`;\n    } else if (celsius <= 14) {\n      // \"Cold\" weather\n      let topGreen = (1 - (celsius + 20) / 35) * 255;\n      let botGreen = topGreen / 2;\n\n      highColor = `rgb(0, ${topGreen}, 255)`;\n      lowColor = `rgb(0, ${botGreen}, 255)`;\n    }\n    return [highColor, lowColor];\n  };\n\n  const Card = styled.div`\n    margin: 15px 15px;\n    background: linear-gradient(\n      20deg,\n      ${getGradient(celsius)[0]},\n      ${getGradient(celsius)[1]}\n    );\n    width: 200px;\n    height: 240px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 15px;\n  `;\n\n  return (\n    <motion.div initial={{ scale: 0 }} animate={{ scale: 1 }}>\n      <Card>\n        <Location city={city} country={country} getWeather={getWeather} />\n        <Info celsius={celsius} condition={condition} />\n      </Card>\n    </motion.div>\n  );\n};\n\nexport default WeatherCard;\n","/Users/ezduanmu/Desktop/react-weather-cards/src/components/WeatherCard/location.js",[],"/Users/ezduanmu/Desktop/react-weather-cards/src/components/WeatherCard/info.js",[],["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":19,"column":10,"nodeType":"51","messageId":"52","endLine":19,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":61,"column":6,"nodeType":"55","endLine":61,"endColumn":24,"suggestions":"56"},{"ruleId":"49","severity":1,"message":"57","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"45","replacedBy":"58"},{"ruleId":"47","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'query' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.","ArrayExpression",["62"],"'useState' is defined but never used.",["60"],["61"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [default_location, getWeather]",{"range":"65","text":"66"},[2206,2224],"[default_location, getWeather]"]